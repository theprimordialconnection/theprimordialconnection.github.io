<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="prim0rdialfi5h">
    <title>Video Player</title>
    <link rel="stylesheet" href="../styles/style.css"> <!-- General stylesheet -->
    <link rel="stylesheet" href="../styles/table.css"> <!-- Table-specific stylesheet -->

    <style>
        .video-container {
            width: 100%;
            max-width: 800px;
            margin: 0 auto;
            text-align: left;
            display: flex;
            flex-direction: column;
        }

        .video-title {
            font-size: 24px;
            padding-bottom: 10px;
            border-bottom: 2px solid #00ff00; /* Bright green underline */
            width: 100%;
        }

        .toggle-description {
            cursor: pointer;
            margin-top: 10px;
            font-size: 18px;
            color: #00ff00;
        }

        .toggle-description span {
            font-size: 16px;
            margin-left: 5px;
        }

        .description {
            margin-top: 10px;
            font-size: 14px;
            line-height: 1.6;
            text-align: justify;
            display: none; /* Initially hidden */
        }

        video {
            width: 100%;
            height: auto;
            margin-top: 10px;
        }

        .download-container {
            display: flex;
            justify-content: flex-end;
            flex-direction: column;
            align-items: flex-end;
        }

        .download-link {
            font-size: 18px;
            color: #00ff00;
            text-decoration: none;
            padding: 10px;
            border: 2px solid #00ff00;
            display: inline-block;
            margin-top: 20px;
        }

        .download-link:hover {
            background-color: #00ff00;
            color: black;
        }

        .file-size {
            margin-top: 10px;
            font-size: 14px;
            color: #999;
        }
    </style>
</head>

<body>
    <header>
        <nav class="nav-container">
            <a href="../index.htm">
                <img src="../img/tpclogo.png" alt="Logo" class="logo">
            </a>
            <div class="burger" onclick="toggleMenu()">&#9776;</div>
            <ul class="menu">
                <li><a href="../seeds.htm">w33d seeds</a></li>
                <li><a href="../packs.htm">sample packs</a></li>
                <li><a href="../garms.htm">garms</a></li>
                <li><a href="../ukparties.htm">uk parties</a></li>
                <li><a href="../freeshit.htm">free shit</a></li>
                <li><a href="../eggs.htm">eggs</a></li>
            </ul>
        </nav>
    </header>

    <div class="video-container">
        <h1 id="videoTitle" class="video-title">Video Title</h1>

        <!-- Videos will be dynamically inserted here -->
        <div id="videosSection"></div>
    </div>

    <footer>
        <img src="../img/rotating_favicon.gif" alt="Rotating Favicon" class="footer-icon">
        <p>theprimordialconnection. based in north england.</p>
    </footer>

    <script src="../js/listData.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const urlParams = new URLSearchParams(window.location.search);
            const videoTitle = urlParams.get('title');
            const videoData = listData.find(item => item.title === videoTitle);

            if (videoData) {
                document.getElementById('videoTitle').innerText = videoData.title;
                document.title = `${videoData.title} | theprimordialconnection`;

                const videosSection = document.getElementById('videosSection');

                // If there are multiple videos
                if (Array.isArray(videoData.videos)) {
                    videoData.videos.forEach((video, index) => {
                        const videoContainer = document.createElement('div');

                        // Video player
                        const videoPlayer = document.createElement('video');
                        videoPlayer.setAttribute('controls', '');
                        const videoSource = document.createElement('source');
                        videoSource.setAttribute('src', video.videoSrc);
                        videoSource.setAttribute('type', 'video/mp4');
                        videoPlayer.appendChild(videoSource);
                        videoContainer.appendChild(videoPlayer);

                        // Description toggle
                        const toggleDescription = document.createElement('p');
                        toggleDescription.className = 'toggle-description';
                        toggleDescription.innerHTML = `Description <span>►</span>`;
                        videoContainer.appendChild(toggleDescription);

                        const description = document.createElement('p');
                        description.className = 'description';
                        description.innerHTML = video.description;
                        videoContainer.appendChild(description);

                        // Toggle functionality
                        toggleDescription.addEventListener('click', function () {
                            if (description.style.display === 'none' || description.style.display === '') {
                                description.style.display = 'block';
                                toggleDescription.querySelector('span').innerText = '▼';
                            } else {
                                description.style.display = 'none';
                                toggleDescription.querySelector('span').innerText = '►';
                            }
                        });

                        // Download link and file size
                        const downloadContainer = document.createElement('div');
                        downloadContainer.className = 'download-container';
                        const downloadLink = document.createElement('a');
                        downloadLink.className = 'download-link';
                        downloadLink.innerText = 'Download Video';
                        downloadLink.setAttribute('href', video.videoSrc);
                        downloadLink.setAttribute('download', '');
                        downloadContainer.appendChild(downloadLink);

                        const fileSizeElement = document.createElement('div');
                        fileSizeElement.className = 'file-size';
                        downloadContainer.appendChild(fileSizeElement);
                        videoContainer.appendChild(downloadContainer);

                        // Function to calculate file size
                        fetch(video.videoSrc, { method: 'HEAD' }).then(response => {
                            const fileSize = response.headers.get('content-length');
                            if (fileSize) {
                                const sizeInMB = (fileSize / (1024 * 1024)).toFixed(2);
                                fileSizeElement.innerText = `File size: ${sizeInMB} MB`;
                            } else {
                                fileSizeElement.innerText = 'File size not available';
                            }
                        }).catch(() => {
                            fileSizeElement.innerText = 'Error calculating file size';
                        });

                        videosSection.appendChild(videoContainer);
                    });
                } else {
                    // If there is only one video
                    const videoContainer = document.createElement('div');

                    const videoPlayer = document.createElement('video');
                    videoPlayer.setAttribute('controls', '');
                    const videoSource = document.createElement('source');
                    videoSource.setAttribute('src', videoData.videoSrc);
                    videoSource.setAttribute('type', 'video/mp4');
                    videoPlayer.appendChild(videoSource);
                    videoContainer.appendChild(videoPlayer);

                    const description = document.createElement('p');
                    description.className = 'description';
                    description.innerHTML = videoData.description;
                    videoContainer.appendChild(description);

                    const downloadContainer = document.createElement('div');
                    downloadContainer.className = 'download-container';
                    const downloadLink = document.createElement('a');
                    downloadLink.className = 'download-link';
                    downloadLink.innerText = 'Download Video';
                    downloadLink.setAttribute('href', videoData.videoSrc);
                    downloadLink.setAttribute('download', '');
                    downloadContainer.appendChild(downloadLink);

                    const fileSizeElement = document.createElement('div');
                    fileSizeElement.className = 'file-size';
                    downloadContainer.appendChild(fileSizeElement);
                    videoContainer.appendChild(downloadContainer);

                    fetch(videoData.videoSrc, { method: 'HEAD' }).then(response => {
                        const fileSize = response.headers.get('content-length');
                        if (fileSize) {
                            const sizeInMB = (fileSize / (1024 * 1024)).toFixed(2);
                            fileSizeElement.innerText = `File size: ${sizeInMB} MB`;
                        } else {
                            fileSizeElement.innerText = 'File size not available';
                        }
                    }).catch(() => {
                        fileSizeElement.innerText = 'Error calculating file size';
                    });

                    videosSection.appendChild(videoContainer);
                }
            } else {
                document.getElementById('videosSection').innerHTML = 'Video not found';
                document.title = 'Video not found | theprimordialconnection';
            }
        });
    </script>
</body>

</html>
